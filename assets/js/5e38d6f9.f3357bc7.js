"use strict";(self.webpackChunkkubedl_website=self.webpackChunkkubedl_website||[]).push([[9092],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),s=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(t),m=r,h=u["".concat(d,".").concat(m)]||u[m]||p[m]||o;return t?a.createElement(h,l(l({ref:n},c),{},{components:t})):a.createElement(h,l({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=u;var i={};for(var d in n)hasOwnProperty.call(n,d)&&(i[d]=n[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},830:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),l=["components"],i={sidebar_position:4},d="Dashboard",s={unversionedId:"training/dashboard",id:"training/dashboard",title:"Dashboard",description:"dashboard",source:"@site/docs/training/dashboard.md",sourceDirName:"training",slug:"/training/dashboard",permalink:"/docs/training/dashboard",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/training/dashboard.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"XGBoost",permalink:"/docs/training/workloads/xgboost"},next:{title:"Run in Host Network",permalink:"/docs/training/hostnetowrk"}},c=[{value:"Prerequisites",id:"prerequisites",children:[],level:2},{value:"Deployment Guide",id:"deployment-guide",children:[{value:"Deploy the KubeDL Dashboard",id:"deploy-the-kubedl-dashboard",children:[],level:3},{value:"Access the Dashboard",id:"access-the-dashboard",children:[{value:"Access the Dashboard over SSH",id:"access-the-dashboard-over-ssh",children:[],level:4}],level:3}],level:2},{value:"Development Guide",id:"development-guide",children:[{value:"Build the KubeDL Dashboard Image",id:"build-the-kubedl-dashboard-image",children:[],level:3},{value:"Build Backend Server Binary",id:"build-backend-server-binary",children:[],level:3},{value:"Run Backend Server Locally",id:"run-backend-server-locally",children:[{value:"Optional Settings",id:"optional-settings",children:[],level:4}],level:3},{value:"Run Frontend",id:"run-frontend",children:[{value:"Optional: Set backend server address",id:"optional-set-backend-server-address",children:[],level:4}],level:3},{value:"Editor Tool Recommandation",id:"editor-tool-recommandation",children:[],level:3},{value:"Check code style",id:"check-code-style",children:[],level:3},{value:"Test code",id:"test-code",children:[],level:3}],level:2}],p={toc:c};function u(e){var n=e.components,i=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},p,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"dashboard"},"Dashboard"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"dashboard",src:t(348).Z,width:"3364",height:"1722"})),(0,o.kt)("p",null,"KubeDL dashboard consists of a frontend and a backend. Below documentation describes how to build and run them."),(0,o.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"NodeJS > 10"),(0,o.kt)("li",{parentName:"ul"},"Go > 1.12")),(0,o.kt)("h2",{id:"deployment-guide"},"Deployment Guide"),(0,o.kt)("h3",{id:"deploy-the-kubedl-dashboard"},"Deploy the KubeDL Dashboard"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f console/dashboard.yaml\n")),(0,o.kt)("p",null,"This will create a kubedl-dashboard ",(0,o.kt)("inlineCode",{parentName:"p"},"Deployment"),", its ",(0,o.kt)("inlineCode",{parentName:"p"},"Service"),", and a ",(0,o.kt)("inlineCode",{parentName:"p"},"ConfigMap")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"kubedl-system")," namespace."),(0,o.kt)("p",null,"The dashboard will list nodes. Hence, its service account requires the ",(0,o.kt)("inlineCode",{parentName:"p"},"list node permission"),"."),(0,o.kt)("h3",{id:"access-the-dashboard"},"Access the Dashboard"),(0,o.kt)("p",null,"You can access the dashboard by the ClusterIP or LoadBalancer IP or Ingress depending on your own usage."),(0,o.kt)("p",null,"For example, check the dashboard endpoint by inspecting the service object and you can find the access endpoint."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," kubectl describe service kubedl-dashboard-service -n kubedl-system\n")),(0,o.kt)("h4",{id:"access-the-dashboard-over-ssh"},"Access the Dashboard over SSH"),(0,o.kt)("p",null,"If the dashboard is deployed on a remote machine that requires SSH to access. On your local machine, run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ssh -L 9090:localhost:9090 user@30.30.30.30\n")),(0,o.kt)("p",null,"This will send any browser connection to port 9090 on your local machine(i.e. your laptop), over ssh to the remote machine (30.30.30.30).\nOnce there, it will continue to localhost (the remote machine), port 9090."),(0,o.kt)("p",null,"Then, on the remote machine, run"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," kubectl port-forward deployment/kubedl-dashboard -n kubedl-system 9090:9090\n")),(0,o.kt)("p",null,"This will forward any connections to localhost:9090 (the remote machine you ssh to) to the kubedl-dashboard deployment in Kuberenetes at port 9090"),(0,o.kt)("p",null,"In summary, the connection flow is like below:"),(0,o.kt)("p",null,"Browser -> Local Machine (e.g. your laptop), port 9090 -> Remote Machine, port 9090 -> kubectl forward -> The running dashboard pod, port 9090"),(0,o.kt)("h2",{id:"development-guide"},"Development Guide"),(0,o.kt)("h3",{id:"build-the-kubedl-dashboard-image"},"Build the KubeDL Dashboard Image"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker build . -t kubedl/dashboard:0.1.0 -f Dockerfile.dashboard\n")),(0,o.kt)("h3",{id:"build-backend-server-binary"},"Build Backend Server Binary"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ cd console/\n$ go build -o backend-server ./backend/cmd/backend-server/main.go\n")),(0,o.kt)("h3",{id:"run-backend-server-locally"},"Run Backend Server Locally"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a ",(0,o.kt)("inlineCode",{parentName:"li"},"kubedl-system")," namespace in your Kubernetes if not existing, this is required to create system-level ConfigMaps."),(0,o.kt)("li",{parentName:"ol"},"Make sure the backend-server uses a ",(0,o.kt)("inlineCode",{parentName:"li"},"KUBECONFIG")," that has permission to create ConfigMap."),(0,o.kt)("li",{parentName:"ol"},"Run backend server with no authentication (default mode).",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export KUBECONFIG=<path/to/your/kubeconfig> && ./backend-server\n")))),(0,o.kt)("h4",{id:"optional-settings"},"Optional Settings"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Default Training Container Images"),(0,o.kt)("p",{parentName:"li"},"You can set the default container images for submitting the training jobs through dashboard by creating a ",(0,o.kt)("inlineCode",{parentName:"p"},"ConfigMap"),"\nnamed ",(0,o.kt)("inlineCode",{parentName:"p"},"kubedl-dashboard-config")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"kubedl-system")," namespace as below:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},' apiVersion: v1\n kind: ConfigMap\n metadata:\n     namespace: kubedl-system\n     name: kubedl-dashboard-config #\n data:\n     images: \'{\n         "tf-cpu-images":[\n           "here set your default container image",\n           ...\n         ],\n        "tf-gpu-images":[\n           ...\n        ],\n        "pytorch-gpu-images":[\n           ...\n        ]\n     }\'\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Authentication"),(0,o.kt)("p",{parentName:"li"},"By default, the backend-server has no authentication.\nOptionally, you can enable authentication using ConfigMap. That is, use ",(0,o.kt)("inlineCode",{parentName:"p"},"username")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"password")," defined in ConfigMap and to login."),(0,o.kt)("p",{parentName:"li"},"The backend-server needs to start as ",(0,o.kt)("inlineCode",{parentName:"p"},"./backend-server --authentication-mode=config"),".\nFor example, create a ConfigMap like below:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\n kind: ConfigMap\n metadata:\n     namespace: kubedl-system\n     name: kubedl-dashboard-config\n data:\n    images:\n           ...\n    users: \'[\n        {\n        "username":"admin",\n        "password":"123456"\n        }\n    ]\'\n')),(0,o.kt)("p",{parentName:"li"},"When login to the frontend, use ",(0,o.kt)("inlineCode",{parentName:"p"},"admin")," for username and ",(0,o.kt)("inlineCode",{parentName:"p"},"123456")," for password to login."))),(0,o.kt)("h3",{id:"run-frontend"},"Run Frontend"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Go to the frontend root dir."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd frontend/\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Install dependencies"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn install\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Start Frontend Server"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn start\n")))),(0,o.kt)("h4",{id:"optional-set-backend-server-address"},"Optional: Set backend server address"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Use below config to set the backend-server address."),(0,o.kt)("p",{parentName:"li"},"Path: console/frontend/config/config.js"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'  proxy: [\n    {\n      target: "http://localhost:9090",\n      ...\n    }\n  ]\n')))),(0,o.kt)("p",null,"Change the target to your own backend server address. By default, it is ",(0,o.kt)("inlineCode",{parentName:"p"},"localhost:9090"),"."),(0,o.kt)("h3",{id:"editor-tool-recommandation"},"Editor Tool Recommandation"),(0,o.kt)("p",null,"VSCode + ESlint(Plugin)"),(0,o.kt)("p",null,"VSCode Configuration:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n    "eslint.run": "onSave",\n    "eslint.format.enable": true,\n    "editor.formatOnSave": true,\n    "editor.codeActionsOnSave": {\n        "source.fixAll.eslint": true\n    }\n}\n')),(0,o.kt)("h3",{id:"check-code-style"},"Check code style"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm run lint\n")),(0,o.kt)("p",null,"You can also use script to auto fix some lint error:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm run lint:fix\n")),(0,o.kt)("h3",{id:"test-code"},"Test code"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm test\n")))}u.isMDXComponent=!0},348:function(e,n,t){n.Z=t.p+"assets/images/dashboard-82a9bddea86d8a637fd3bdf2e3f656f6.png"}}]);